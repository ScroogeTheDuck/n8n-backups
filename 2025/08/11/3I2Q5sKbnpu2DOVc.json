{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Check for Changes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Github Sub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Changes": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Github Sub": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-11T12:06:40.297Z",
  "id": "3I2Q5sKbnpu2DOVc",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Github Posting",
  "nodes": [
    {
      "parameters": {},
      "id": "23925bf4-5ced-4f54-b455-cf9de587dea9",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -672,
        -512
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "f514a53e-d5fe-49f4-9886-9b55d718c408",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -416,
        -416
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "cMHK5XrP5ZiNdnaD",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "92877f60-86d8-4a81-bcf9-d933f865b079",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -16,
        -416
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "78ae6808-20c7-4f1a-97f6-49b519371a89",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -672,
        -304
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub.\n\nThe files are saved `ID.json` for the filename.\n\n### Setup\nOpen `Globals` node and update the values below ðŸ‘‡\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository. If it doesn't exist it will be created.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - workflows/\n\n\nThe workflow calls itself using a subworkflow, to help reduce memory usage.",
        "height": 601,
        "width": 371,
        "color": 4
      },
      "id": "8c2c0b4d-f98a-4705-909d-c6886879b9bf",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        -768
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 435,
        "width": 1142,
        "color": 7
      },
      "id": "cb5890d0-b96c-4fda-8c1f-c6768d9c22ae",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -720,
        -592
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Check if any workflows changed today\nconst today = new Date();\ntoday.setHours(0, 0, 0, 0); // Start of today\n\nlet hasChanges = false;\nconst changedWorkflows = [];\n\nfor (const item of $input.all()) {\n  const workflow = item.json;\n  const updatedAt = new Date(workflow.updatedAt);\n  \n  // Check if workflow was updated today\n  if (updatedAt >= today) {\n    hasChanges = true;\n    changedWorkflows.push(workflow);\n    console.log(`Changed workflow: ${workflow.name} (${workflow.id})`);\n  }\n}\n\nconsole.log(`Found ${changedWorkflows.length} workflows changed today`);\n\nif (!hasChanges) {\n  // Return empty array to stop the workflow\n  console.log('No changes detected today - skipping backup');\n  return [];\n}\n\nconsole.log('Changes detected - proceeding with backup');\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -208,
        -416
      ],
      "id": "f7f94a64-5fd6-4660-b448-611d16400a83",
      "name": "Check for Changes"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "2YOYFCJssj5e2pbl",
          "mode": "list",
          "cachedResultName": "Github Sub"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "id": "6d52f1dd-7ca0-4ad1-ac7c-98a9df924824",
      "name": "Github Sub",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        208,
        -416
      ],
      "typeVersion": 1.2
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-11T13:29:26.566Z",
  "versionId": "b7292751-d02c-4b62-bc7a-6280a8dd571f"
}