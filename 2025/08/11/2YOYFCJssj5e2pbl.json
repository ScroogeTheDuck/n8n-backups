{
  "active": false,
  "connections": {
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-11T13:00:29.749Z",
  "id": "2YOYFCJssj5e2pbl",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Github Sub",
  "nodes": [
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 750.8363163824032,
        "width": 2086.845881354743,
        "color": 6
      },
      "id": "35bf2e73-8b61-4d62-a064-06370571af01",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "d8285ed0-34a8-4065-8f1b-4d9a441fbadd",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1888,
        208
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "fe7aaee2-53f4-4af7-9161-97d33d318e8f",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        992,
        80
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "506c2bec-e8b7-497d-b2d5-d3e5f9c4c37b",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        784,
        96
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "ebb13500-91cc-4ae9-b378-7f0abde1c76c",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        784,
        368
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
      },
      "id": "6779d629-f0ce-4dd6-b1b8-50bdd66ce495",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        992,
        368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "161acda1-2bc8-4b6e-84de-ace40e0c310b",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1216,
        368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "35f8e0e1-6564-4866-9160-f1399bc1b1ee",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1440,
        208
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "55c3ca4d-0131-42ee-a9d7-6b39f664b80f",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1440,
        368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "da8a007f-67c4-4c2b-bfff-5cf5990335c7",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1440,
        528
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.name.replace(/[^a-zA-Z0-9]/g, '_')}}.json"
      },
      "id": "89c58b05-263f-48be-b005-40b8164418c1",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1648,
        528
      ],
      "webhookId": "e5e4ce8b-74a3-4b94-83ca-351edc280faf",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "qk0vbPEOfErFYWg1",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.name.replace(/[^a-zA-Z0-9]/g, '_')}}.json"
      },
      "id": "b211f11a-0833-4bf1-a273-1a5d11be96e3",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1648,
        352
      ],
      "webhookId": "a57e71de-4960-4d25-a59f-1a9e2e96aff5",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "qk0vbPEOfErFYWg1",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.name }}"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.name.replace(/[^a-zA-Z0-9]/g, '_') }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "91b42627-10ba-4394-abf5-3205ec4a85a3",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        592,
        96
      ],
      "webhookId": "743111c3-2c21-4658-8097-a9fe966f43d2",
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "qk0vbPEOfErFYWg1",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "ScroogeTheDuck"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n-backups"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "={{new Date().getFullYear()}}/{{String(new Date().getMonth() + 1).padStart(2, '0')}}/{{String(new Date().getDate()).padStart(2, '0')}}/"
            }
          ]
        },
        "options": {}
      },
      "id": "3ef27a31-572c-4e41-94d7-fe689de02bef",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        368,
        272
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## Edit this node 👇",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "e0aab359-9ecd-4105-82f7-9b70cb4f4cf9",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        320,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "id": "1bbe971a-454f-4eb8-a65e-16c066dcc163",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        80,
        384
      ],
      "typeVersion": 1.1
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "createdAt": "2025-08-04T09:54:57.505Z",
          "updatedAt": "2025-08-04T09:57:54.896Z",
          "id": "OV8HZyTJ8DbdoJi6",
          "name": "Apollo_Scraping",
          "active": false,
          "isArchived": false,
          "nodes": [
            {
              "parameters": {
                "inputSource": "jsonExample",
                "jsonExample": "{\n  \"search\": \"landscaping\",\n  \"location\": \"New York, US\"\n}"
              },
              "type": "n8n-nodes-base.executeWorkflowTrigger",
              "typeVersion": 1.1,
              "position": [
                144,
                -160
              ],
              "id": "be8f6d62-fdd3-4326-b928-ebe440083490",
              "name": "When Executed by Another Workflow"
            },
            {
              "parameters": {
                "method": "POST",
                "url": "https://api.apify.com/v2/acts/gKvEpKx3i3zlRj2G9/runs?waitForFinish=300",
                "sendHeaders": true,
                "headerParameters": {
                  "parameters": [
                    {
                      "name": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "name": "Authorization",
                      "value": "Bearer <YOUR_API_KEY>"
                    }
                  ]
                },
                "sendBody": true,
                "specifyBody": "json",
                "jsonBody": "={\n    \"getPersonalEmails\": true,\n    \"getWorkEmails\": true,\n    \"totalRecords\": 2,\n    \"url\": \"https://app.apollo.io/#/people?page=1&contactEmailExcludeCatchAll=true&sortAscending=false&sortByField=%5Bnone%5D&personLocations[]={{ $json.location }}&qOrganizationKeywordTags[]={{ $json.industry_tag }}&includedOrganizationKeywordFields[]=tags&includedOrganizationKeywordFields[]=name\"\n}",
                "options": {}
              },
              "type": "n8n-nodes-base.httpRequest",
              "typeVersion": 4.2,
              "position": [
                592,
                -160
              ],
              "id": "181fdcc6-6bd9-450a-991f-ff926a08338e",
              "name": "HTTP Request"
            },
            {
              "parameters": {
                "url": "=https://api.apify.com/v2/datasets/{{ $json.data.defaultDatasetId }}/items?format=json",
                "sendHeaders": true,
                "headerParameters": {
                  "parameters": [
                    {
                      "name": "Authorization",
                      "value": "Bearer <YOUR_API_KEY>"
                    },
                    {
                      "name": "="
                    }
                  ]
                },
                "options": {}
              },
              "type": "n8n-nodes-base.httpRequest",
              "typeVersion": 4.2,
              "position": [
                816,
                -160
              ],
              "id": "88187bc1-9d61-43c6-8850-59d6d6d1b11b",
              "name": "HTTP Request1"
            },
            {
              "parameters": {
                "aggregate": "aggregateAllItemData",
                "options": {}
              },
              "type": "n8n-nodes-base.aggregate",
              "typeVersion": 1,
              "position": [
                1248,
                -160
              ],
              "id": "32685b18-cc65-4fec-ad27-a25c01f17170",
              "name": "Aggregate"
            },
            {
              "parameters": {
                "operation": "appendOrUpdate",
                "documentId": {
                  "__rl": true,
                  "value": "158g438RE2MUl_pKS2A_HTnarZ7XixFh_fUBHZmp8uQ4",
                  "mode": "list",
                  "cachedResultName": "AI Agent Web Scraping Results",
                  "cachedResultUrl": "https://docs.google.com/spreadsheets/d/158g438RE2MUl_pKS2A_HTnarZ7XixFh_fUBHZmp8uQ4/edit?usp=drivesdk"
                },
                "sheetName": {
                  "__rl": true,
                  "value": "gid=0",
                  "mode": "list",
                  "cachedResultName": "Sheet1",
                  "cachedResultUrl": "https://docs.google.com/spreadsheets/d/158g438RE2MUl_pKS2A_HTnarZ7XixFh_fUBHZmp8uQ4/edit#gid=0"
                },
                "columns": {
                  "mappingMode": "defineBelow",
                  "value": {
                    "ID": "={{ $json.id }}",
                    "City": "={{ $json.city }}",
                    "URL": "={{ $json.organization.website_url }}",
                    "Name": "={{ $json.employment_history[0].organization_name }}",
                    "Phone": "=Phone: {{ $json.organization.primary_phone.number }}",
                    "Service": "=",
                    "Platform": "Apollo",
                    "LinkedIn": "={{ $json.linkedin_url }}",
                    "Last Name": "={{ $json.last_name }}",
                    "First Name": "={{ $json.first_name }}",
                    "Email": "={{ $json.email }}"
                  },
                  "matchingColumns": [
                    "ID"
                  ],
                  "schema": [
                    {
                      "id": "ID",
                      "displayName": "ID",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "Name",
                      "displayName": "Name",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true
                    },
                    {
                      "id": "Email",
                      "displayName": "Email",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true
                    },
                    {
                      "id": "Phone",
                      "displayName": "Phone",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true
                    },
                    {
                      "id": "Service",
                      "displayName": "Service",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true
                    },
                    {
                      "id": "City",
                      "displayName": "City",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "URL",
                      "displayName": "URL",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "Platform",
                      "displayName": "Platform",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "First Name",
                      "displayName": "First Name",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "Last Name",
                      "displayName": "Last Name",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "LinkedIn",
                      "displayName": "LinkedIn",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    }
                  ],
                  "attemptToConvertTypes": false,
                  "convertFieldsToString": false
                },
                "options": {}
              },
              "type": "n8n-nodes-base.googleSheets",
              "typeVersion": 4.5,
              "position": [
                1024,
                -160
              ],
              "id": "a0263531-c1a3-4970-b869-6bcb35df4b7c",
              "name": "Google Sheets"
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "e389d681-3bc9-45a5-93a3-693e9e1f2baf",
                      "name": "location",
                      "value": "={{ encodeURIComponent($json.location) }}",
                      "type": "string"
                    },
                    {
                      "id": "82bd17ab-9f52-47cc-b262-26eeb052cb09",
                      "name": "industry_tag",
                      "value": "={{ $json.search }}",
                      "type": "string"
                    }
                  ]
                },
                "options": {}
              },
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                368,
                -160
              ],
              "id": "3987262e-db5f-47d8-a6a3-902fd0648c5d",
              "name": "Edit Fields"
            }
          ],
          "connections": {
            "When Executed by Another Workflow": {
              "main": [
                [
                  {
                    "node": "Edit Fields",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "HTTP Request": {
              "main": [
                [
                  {
                    "node": "HTTP Request1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "HTTP Request1": {
              "main": [
                [
                  {
                    "node": "Google Sheets",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Google Sheets": {
              "main": [
                [
                  {
                    "node": "Aggregate",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Edit Fields": {
              "main": [
                [
                  {
                    "node": "HTTP Request",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            }
          },
          "settings": {
            "executionOrder": "v1"
          },
          "staticData": null,
          "meta": null,
          "pinData": {
            "When Executed by Another Workflow": [
              {
                "json": {
                  "search": "landscaping",
                  "location": "New York, US"
                }
              }
            ]
          },
          "versionId": "294afe56-80c0-4b6c-aaf4-aa3814503136",
          "triggerCount": 0,
          "tags": [
            {
              "createdAt": "2025-08-04T09:57:01.588Z",
              "updatedAt": "2025-08-04T09:57:01.588Z",
              "id": "oZap1uiod8oDPzkJ",
              "name": "TOOL"
            },
            {
              "createdAt": "2025-08-04T09:57:46.874Z",
              "updatedAt": "2025-08-04T09:57:46.874Z",
              "id": "8xr8N0ZCMPDfckkJ",
              "name": "Web_Scraping"
            }
          ]
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-11T13:36:13.571Z",
  "versionId": "6d1e264c-ed5f-43ef-8a09-665136555a42"
}