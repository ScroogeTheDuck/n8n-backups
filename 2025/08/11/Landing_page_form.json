{
  "active": false,
  "connections": {
    "Prepare Answers": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Answers": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert User": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Prepare Answers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Insert Answers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Insert User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-26T18:40:59.492Z",
  "id": "hdnk5DX2akjRdvL8",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Landing page form",
  "nodes": [
    {
      "parameters": {
        "functionCode": "// Grab all incoming items\nconst all = $input.all();\n\n// Find the user‐insert result (has .json.id)\nconst userItem = all.find(i => i.json.id !== undefined);\nif (!userItem) return []; \n\n// Find the original form data (has .json.answers)\nconst dataItem = all.find(i => Array.isArray(i.json.answers));\nif (!dataItem) return [];\n\n// Extract\nconst userId  = userItem.json.id;\nconst answers = dataItem.json.answers;\n\n// Flatten and emit one item per answer (including multi‐select arrays)\nconst out = [];\nfor (const a of answers) {\n  const texts = Array.isArray(a.answer_text)\n    ? a.answer_text\n    : [a.answer_text];\n  for (const t of texts) {\n    out.push({\n      json: {\n        user_id:     userId,\n        question_key: a.question_key,\n        answer_text:  t,\n      }\n    });\n  }\n}\n\nreturn out;\n"
      },
      "name": "Prepare Answers",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        112,
        48
      ],
      "id": "83343680-bead-49b9-a2e0-143192de2bcc"
    },
    {
      "parameters": {
        "table": "user_answers",
        "columns": "=user_id,question_key,answer_text",
        "additionalFields": {}
      },
      "name": "Insert Answers",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        496,
        112
      ],
      "id": "ae6c70f6-f356-4664-b8e8-2d669fd5d5de",
      "credentials": {
        "postgres": {
          "id": "y33o1pUSXRiuHWaK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        656,
        32
      ],
      "id": "2f5bde2d-5283-43a9-9afe-5bdd231b7542"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO public.users (\n  full_name,\n  email,\n  company_name,\n  company_website\n)\nVALUES (\n  '{{$json[\"full_name\"]}}',\n  '{{$json[\"email\"]}}',\n  '{{$json[\"company_name\"]}}',\n  '{{$json[\"company_website\"] || \"\"}}'\n)\nRETURNING id;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -288,
        -32
      ],
      "id": "3c93a74c-6e41-436c-bba9-25ca08a76df0",
      "name": "Insert User",
      "credentials": {
        "postgres": {
          "id": "y33o1pUSXRiuHWaK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -64,
        48
      ],
      "id": "75d2387b-0ed1-4e27-a6b4-e7e261e6928b",
      "name": "Merge"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        336,
        48
      ],
      "id": "d16317e5-08b2-4fac-a37a-925971d48d89",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "formTitle": "Business Automation Survey",
        "formDescription": "Help us understand your automation needs.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Full Name",
              "placeholder": "Enter your full name",
              "requiredField": true
            },
            {
              "fieldLabel": "Email Address",
              "fieldType": "email",
              "placeholder": "your@email.com",
              "requiredField": true
            },
            {
              "fieldLabel": "Company Name",
              "placeholder": "Your company name",
              "requiredField": true
            },
            {
              "fieldLabel": "Company Website",
              "placeholder": "https://yourcompany.com"
            },
            {
              "fieldLabel": "What industry are you in?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "SaaS / Software"
                  },
                  {
                    "option": "E-commerce"
                  },
                  {
                    "option": "Healthcare"
                  },
                  {
                    "option": "Finance"
                  },
                  {
                    "option": "Marketing Agency"
                  },
                  {
                    "option": "Other"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Company size",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "1-2 employees"
                  },
                  {
                    "option": "3–10 employees"
                  },
                  {
                    "option": "11–50 employees"
                  },
                  {
                    "option": "51–200 employees"
                  },
                  {
                    "option": "200+ employees"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "What processes would you like to automate?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Lead capture / CRM updates"
                  },
                  {
                    "option": "Reporting / Analytics"
                  },
                  {
                    "option": "Customer Support"
                  },
                  {
                    "option": "Data Entry"
                  },
                  {
                    "option": "Email Marketing"
                  },
                  {
                    "option": "Other"
                  }
                ]
              },
              "multiselect": true,
              "requiredField": true
            },
            {
              "fieldLabel": "Primary reason for automation",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Save time"
                  },
                  {
                    "option": "Reduce errors"
                  },
                  {
                    "option": "Scale operations"
                  },
                  {
                    "option": "Cut costs"
                  },
                  {
                    "option": "Improve accuracy"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Most important metric to track",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Hours saved/week"
                  },
                  {
                    "option": "Cost reduction"
                  },
                  {
                    "option": "Error reduction"
                  },
                  {
                    "option": "Revenue increase"
                  },
                  {
                    "option": "Process efficiency"
                  }
                ]
              },
              "requiredField": true
            }
          ]
        },
        "options": {
          "path": "?",
          "respondWithOptions": {
            "values": {
              "formSubmittedText": "Thank you! Your responses have been recorded."
            }
          },
          "ignoreBots": true,
          "customCss": ":root {\n\t--font-family: 'Open Sans', sans-serif;\n\t--font-weight-normal: 400;\n\t--font-weight-bold: 600;\n\t--font-size-body: 12px;\n\t--font-size-label: 14px;\n\t--font-size-test-notice: 12px;\n\t--font-size-input: 14px;\n\t--font-size-header: 20px;\n\t--font-size-paragraph: 14px;\n\t--font-size-link: 12px;\n\t--font-size-error: 12px;\n\t--font-size-html-h1: 28px;\n\t--font-size-html-h2: 20px;\n\t--font-size-html-h3: 16px;\n\t--font-size-html-h4: 14px;\n\t--font-size-html-h5: 12px;\n\t--font-size-html-h6: 10px;\n\t--font-size-subheader: 14px;\n\n\t/* Colors */\n\t--color-background: #fbfcfe;\n\t--color-test-notice-text: #e6a23d;\n\t--color-test-notice-bg: #fefaf6;\n\t--color-test-notice-border: #f6dcb7;\n\t--color-card-bg: #ffffff;\n\t--color-card-border: #dbdfe7;\n\t--color-card-shadow: rgba(99, 77, 255, 0.06);\n\t--color-link: #7e8186;\n\t--color-header: #525356;\n\t--color-label: #555555;\n\t--color-input-border: #dbdfe7;\n\t--color-input-text: #71747A;\n\t--color-focus-border: rgb(90, 76, 194);\n\t--color-submit-btn-bg: #ff6d5a;\n\t--color-submit-btn-text: #ffffff;\n\t--color-error: #ea1f30;\n\t--color-required: #ff6d5a;\n\t--color-clear-button-bg: #7e8186;\n\t--color-html-text: #555;\n\t--color-html-link: #ff6d5a;\n\t--color-header-subtext: #7e8186;\n\n\t/* Border Radii */\n\t--border-radius-card: 8px;\n\t--border-radius-input: 6px;\n\t--border-radius-clear-btn: 50%;\n\t--card-border-radius: 8px;\n\n\t/* Spacing */\n\t--padding-container-top: 24px;\n\t--padding-card: 24px;\n\t--padding-test-notice-vertical: 12px;\n\t--padding-test-notice-horizontal: 24px;\n\t--margin-bottom-card: 16px;\n\t--padding-form-input: 12px;\n\t--card-padding: 24px;\n\t--card-margin-bottom: 16px;\n\n\t/* Dimensions */\n\t--container-width: 448px;\n\t--submit-btn-height: 48px;\n\t--checkbox-size: 18px;\n\n\t/* Others */\n\t--box-shadow-card: 0px 4px 16px 0px var(--color-card-shadow);\n\t--opacity-placeholder: 0.5;\n}"
        }
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -512,
        64
      ],
      "id": "fcfa05d5-c2c3-4725-a9c5-b9f3ada0d568",
      "name": "On form submission1",
      "webhookId": "80c4ff08-e28b-4b57-a4e1-879dd2e3c85e"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-30T09:36:30.410Z",
  "versionId": "2015d0e8-3a5c-4152-baa0-3ba1ba48dd26"
}